query EmbarkStory($storyName: String!, $locale: String!) {
    graphqlEmbarkStory: embarkStory(name: $storyName, locale: $locale) {
        startPassage
        computedStoreValues {
            key
            value
        }
        passages {
            id
            name
            externalRedirect {
                data {
                    location
                }
            }
            offerRedirect {
                data {
                    keys
                }
            }
            messages {
                ...MessageFragment
            }
            response {
                ...MessageFragment
                ...ResponseExpressionFragment
                ... on EmbarkGroupedResponse {
                    title {
                        ...ResponseExpressionFragment
                    }
                    items {
                        ...MessageFragment
                    }
                    each {
                        key
                        content {
                            ...MessageFragment
                        }
                    }
                }
            }
            redirects {
                ... on EmbarkRedirectUnaryExpression {
                    unaryType: type
                    to
                    passedExpressionKey
                    passedExpressionValue
                }
                ... on EmbarkRedirectBinaryExpression {
                    binaryType: type
                    to
                    key
                    value
                    passedExpressionKey
                    passedExpressionValue
                }
                ... on EmbarkRedirectMultipleExpressions {
                    multipleExpressionType: type
                    to
                    passedExpressionKey
                    passedExpressionValue
                    subExpressions {
                        ...ExpressionFragment
                    }
                }
            }
            action {
                ... on EmbarkSelectAction {
                    selectData: data {
                        options {
                            link {
                                ...EmbarkLinkFragment
                            }
                            keys
                            values
                            badge
                            api {
                                ...ApiFragment
                            }
                        }
                    }
                }
                ... on EmbarkTextAction {
                    textData: data {
                        key
                        placeholder
                        mask
                        link {
                            ...EmbarkLinkFragment
                        }
                        api {
                            ...ApiFragment
                        }
                    }
                }
                ... on EmbarkTextActionSet {
                    textSetData: data {
                        link {
                            ...EmbarkLinkFragment
                        }
                        textActions {
                            data {
                                key
                                mask
                                placeholder
                                title
                            }
                        }
                        api {
                            ...ApiFragment
                        }
                    }
                }
                ... on EmbarkPreviousInsuranceProviderAction {
                    previousInsurerData: data {
                        next {
                            ...EmbarkLinkFragment
                        }
                        skip {
                            ...EmbarkLinkFragment
                        }
                        storeKey
                        insuranceProviders {
                            id
                            name
                            logo {
                                variants {
                                    ...IconVariantsFragment
                                }
                            }
                        }
                    }
                }
                ... on EmbarkExternalInsuranceProviderAction {
                    externalInsurerData: data {
                        next {
                            ...EmbarkLinkFragment
                        }
                        skip {
                            ...EmbarkLinkFragment
                        },
                        storeKey
                    }
                }
                ... on EmbarkNumberAction {
                    numberActionData: data {
                        ...EmbarkNumberActionFragment
                    }
                }
                ... on EmbarkNumberActionSet {
                    numberActionSetData: data {
                        numberActions {
                            data {
                                key
                                placeholder
                                unit
                                label
                                maxValue
                                minValue
                                title
                            }
                        }
                        link {
                            ...EmbarkLinkFragment
                        }
                    }
                }
                ... on EmbarkDatePickerAction {
                    storeKey
                    label
                    next {
                        ...EmbarkLinkFragment
                    }
                }
                ... on EmbarkMultiAction {
                    multiActionData: data {
                        key
                        maxAmount
                        addLabel
                        link {
                            ...EmbarkLinkFragment
                        }
                        components {
                            ... on EmbarkMultiActionNumberAction {
                                numberActionData: data {
                                    key
                                    placeholder
                                    label
                                    unit
                                }
                            }
                            ... on EmbarkDropdownAction {
                                dropDownActionData: data {
                                    label
                                    key
                                    options {
                                        value
                                        text
                                    }
                                }
                            }
                            ... on EmbarkSwitchAction {
                                switchActionData: data {
                                    label
                                    key
                                    defaultValue
                                }
                            }
                        }
                    }
                }
                ... on EmbarkAudioRecorderAction {
                    audioRecorderActionData: data {
                        storeKey
                        label
                        next {
                            ...EmbarkLinkFragment
                        }
                    }
                }
                ... on EmbarkAddressAutocompleteAction {
                    component
                    addressAutocompleteActionData: data {
                        placeholder
                        key
                        link {
                            ...EmbarkLinkFragment
                        }
                        api {
                            ...ApiFragment
                        }
                    }
                }
            }
            api {
                ...ApiFragment
            }
            tooltips {
                title
                description
            }
            allLinks {
                ...EmbarkLinkFragment
            }
            tracks {
                eventName
                eventKeys
                includeAllKeys
                customData
            }
            variantedOfferRedirects {
                data {
                    selectedKeys
                    allKeys
                    expression {
                        ...ExpressionFragment
                    }
                }
            }
        }
    }
}
